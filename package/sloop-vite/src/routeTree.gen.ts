/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as UserIdSlugImport } from './routes/user.$id.$slug'
import { Route as ProposalIdSlugImport } from './routes/proposal.$id.$slug'

// Create Virtual Routes

const HomeLazyImport = createFileRoute('/home')()
const IndexLazyImport = createFileRoute('/')()
const MeetingIdSlugLazyImport = createFileRoute('/meeting/$id/$slug')()
const GroupIdSlugIndexLazyImport = createFileRoute('/group/$id/$slug/')()
const GroupIdSlugVotingConsoleLazyImport = createFileRoute(
  '/group/$id/$slug/voting-console',
)()
const GroupIdSlugProposalLazyImport = createFileRoute(
  '/group/$id/$slug/proposal',
)()
const GroupIdSlugMembershipLazyImport = createFileRoute(
  '/group/$id/$slug/membership',
)()
const GroupIdSlugHomeLazyImport = createFileRoute('/group/$id/$slug/home')()
const GroupIdSlugCopyvoteLazyImport = createFileRoute(
  '/group/$id/$slug/copyvote',
)()
const GroupIdSlugAgendaLazyImport = createFileRoute('/group/$id/$slug/agenda')()

// Create/Update Routes

const HomeLazyRoute = HomeLazyImport.update({
  path: '/home',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/home.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const MeetingIdSlugLazyRoute = MeetingIdSlugLazyImport.update({
  path: '/meeting/$id/$slug',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/meeting.$id.$slug.lazy').then((d) => d.Route),
)

const UserIdSlugRoute = UserIdSlugImport.update({
  path: '/user/$id/$slug',
  getParentRoute: () => rootRoute,
} as any)

const ProposalIdSlugRoute = ProposalIdSlugImport.update({
  path: '/proposal/$id/$slug',
  getParentRoute: () => rootRoute,
} as any)

const GroupIdSlugIndexLazyRoute = GroupIdSlugIndexLazyImport.update({
  path: '/group/$id/$slug/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/group.$id.$slug/index.lazy').then((d) => d.Route),
)

const GroupIdSlugVotingConsoleLazyRoute =
  GroupIdSlugVotingConsoleLazyImport.update({
    path: '/group/$id/$slug/voting-console',
    getParentRoute: () => rootRoute,
  } as any).lazy(() =>
    import('./routes/group.$id.$slug/voting-console.lazy').then((d) => d.Route),
  )

const GroupIdSlugProposalLazyRoute = GroupIdSlugProposalLazyImport.update({
  path: '/group/$id/$slug/proposal',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/group.$id.$slug/proposal.lazy').then((d) => d.Route),
)

const GroupIdSlugMembershipLazyRoute = GroupIdSlugMembershipLazyImport.update({
  path: '/group/$id/$slug/membership',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/group.$id.$slug/membership.lazy').then((d) => d.Route),
)

const GroupIdSlugHomeLazyRoute = GroupIdSlugHomeLazyImport.update({
  path: '/group/$id/$slug/home',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/group.$id.$slug/home.lazy').then((d) => d.Route),
)

const GroupIdSlugCopyvoteLazyRoute = GroupIdSlugCopyvoteLazyImport.update({
  path: '/group/$id/$slug/copyvote',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/group.$id.$slug/copyvote.lazy').then((d) => d.Route),
)

const GroupIdSlugAgendaLazyRoute = GroupIdSlugAgendaLazyImport.update({
  path: '/group/$id/$slug/agenda',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/group.$id.$slug/agenda.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/home': {
      preLoaderRoute: typeof HomeLazyImport
      parentRoute: typeof rootRoute
    }
    '/proposal/$id/$slug': {
      preLoaderRoute: typeof ProposalIdSlugImport
      parentRoute: typeof rootRoute
    }
    '/user/$id/$slug': {
      preLoaderRoute: typeof UserIdSlugImport
      parentRoute: typeof rootRoute
    }
    '/meeting/$id/$slug': {
      preLoaderRoute: typeof MeetingIdSlugLazyImport
      parentRoute: typeof rootRoute
    }
    '/group/$id/$slug/agenda': {
      preLoaderRoute: typeof GroupIdSlugAgendaLazyImport
      parentRoute: typeof rootRoute
    }
    '/group/$id/$slug/copyvote': {
      preLoaderRoute: typeof GroupIdSlugCopyvoteLazyImport
      parentRoute: typeof rootRoute
    }
    '/group/$id/$slug/home': {
      preLoaderRoute: typeof GroupIdSlugHomeLazyImport
      parentRoute: typeof rootRoute
    }
    '/group/$id/$slug/membership': {
      preLoaderRoute: typeof GroupIdSlugMembershipLazyImport
      parentRoute: typeof rootRoute
    }
    '/group/$id/$slug/proposal': {
      preLoaderRoute: typeof GroupIdSlugProposalLazyImport
      parentRoute: typeof rootRoute
    }
    '/group/$id/$slug/voting-console': {
      preLoaderRoute: typeof GroupIdSlugVotingConsoleLazyImport
      parentRoute: typeof rootRoute
    }
    '/group/$id/$slug/': {
      preLoaderRoute: typeof GroupIdSlugIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexLazyRoute,
  HomeLazyRoute,
  ProposalIdSlugRoute,
  UserIdSlugRoute,
  MeetingIdSlugLazyRoute,
  GroupIdSlugAgendaLazyRoute,
  GroupIdSlugCopyvoteLazyRoute,
  GroupIdSlugHomeLazyRoute,
  GroupIdSlugMembershipLazyRoute,
  GroupIdSlugProposalLazyRoute,
  GroupIdSlugVotingConsoleLazyRoute,
  GroupIdSlugIndexLazyRoute,
])

/* prettier-ignore-end */
